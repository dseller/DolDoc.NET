//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Z:/Projects/DolDoc.NET/DolDoc.Centaur\centaur.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IcentaurListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class centaurBaseListener : IcentaurListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] centaurParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] centaurParser.StartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ignore01</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIgnore01([NotNull] centaurParser.Ignore01Context context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ignore01</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIgnore01([NotNull] centaurParser.Ignore01Context context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>call</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall([NotNull] centaurParser.CallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>call</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall([NotNull] centaurParser.CallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>decrement</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecrement([NotNull] centaurParser.DecrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decrement</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecrement([NotNull] centaurParser.DecrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>index</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex([NotNull] centaurParser.IndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>index</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex([NotNull] centaurParser.IndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>getMember</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetMember([NotNull] centaurParser.GetMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>getMember</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetMember([NotNull] centaurParser.GetMemberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>increment</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncrement([NotNull] centaurParser.IncrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>increment</c>
	/// labeled alternative in <see cref="centaurParser.postfix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncrement([NotNull] centaurParser.IncrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.mul_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMul_expression([NotNull] centaurParser.Mul_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.mul_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMul_expression([NotNull] centaurParser.Mul_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.add_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd_expression([NotNull] centaurParser.Add_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.add_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd_expression([NotNull] centaurParser.Add_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShift_expression([NotNull] centaurParser.Shift_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShift_expression([NotNull] centaurParser.Shift_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_expression([NotNull] centaurParser.Relational_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_expression([NotNull] centaurParser.Relational_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_expression([NotNull] centaurParser.Equality_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_expression([NotNull] centaurParser.Equality_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.bitwise_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwise_and_expression([NotNull] centaurParser.Bitwise_and_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.bitwise_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwise_and_expression([NotNull] centaurParser.Bitwise_and_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.bitwise_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwise_or_expression([NotNull] centaurParser.Bitwise_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.bitwise_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwise_or_expression([NotNull] centaurParser.Bitwise_or_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.logical_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_and_expression([NotNull] centaurParser.Logical_and_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.logical_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_and_expression([NotNull] centaurParser.Logical_and_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.logical_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_or_expression([NotNull] centaurParser.Logical_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.logical_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_or_expression([NotNull] centaurParser.Logical_or_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expression([NotNull] centaurParser.Unary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expression([NotNull] centaurParser.Unary_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.assignment_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_expression([NotNull] centaurParser.Assignment_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.assignment_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_expression([NotNull] centaurParser.Assignment_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] centaurParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] centaurParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_expression([NotNull] centaurParser.Primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_expression([NotNull] centaurParser.Primary_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaration([NotNull] centaurParser.DeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaration([NotNull] centaurParser.DeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.compound_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_statement([NotNull] centaurParser.Compound_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.compound_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_statement([NotNull] centaurParser.Compound_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] centaurParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] centaurParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.statement_or_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement_or_declaration([NotNull] centaurParser.Statement_or_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.statement_or_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement_or_declaration([NotNull] centaurParser.Statement_or_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement_list([NotNull] centaurParser.Statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement_list([NotNull] centaurParser.Statement_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.struct_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_field([NotNull] centaurParser.Struct_fieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.struct_field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_field([NotNull] centaurParser.Struct_fieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.struct_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_definition([NotNull] centaurParser.Struct_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.struct_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_definition([NotNull] centaurParser.Struct_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_definition([NotNull] centaurParser.Function_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.function_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_definition([NotNull] centaurParser.Function_definitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.expression_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_statement([NotNull] centaurParser.Expression_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.expression_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_statement([NotNull] centaurParser.Expression_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinition([NotNull] centaurParser.DefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinition([NotNull] centaurParser.DefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="centaurParser.definition_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinition_list([NotNull] centaurParser.Definition_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="centaurParser.definition_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinition_list([NotNull] centaurParser.Definition_listContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
